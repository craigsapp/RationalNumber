
@@BEGIN:	FunctionDocumentation
@OBJECT:	RationalNumber
@METHOD:	toString
@PARAMETERS:	none
@PROTOTYPE:	yes
@FILE:		RationalNumber-base.js
@SEEALSO:	toStringMixed
@SHORTDESC:	Convert to a string in the form "n/d".
@LONGDESC:	Returns a string in the form of "numerator/denominator".
		If the denominator is 1, then it will not be placed in the
		output string, nor the slash normally placed between the
		numerator and denominator.  For Infinity or -Infinity, 
		toString method will print 1/0 and -1/0, which is the internal
		representation for these numbers.  NaN will be printed
		as 0/0.  The toStringMixed method will instead output
		"Infinity", "-Infinity", and "NaN" for these values.  The
		output from the toString method can be used as an input
		to create another RationalNumber via the constructor function,
		or as input to the setValue method.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@BEGIN: EXAMPLE

@DESCRIPTION: Convert a RationalNumber into a String.

@CODE:
var rn = new RationalNumber(4, 11);
rn.toString();

@OUTPUT:
"4/11"

@@END:	EXAMPLE


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@BEGIN: EXAMPLE

@DESCRIPTION: Convert a RationalNumber to a String and use it to set another RationalNumber value.

@CODE:
var rn = new RationalNumber(4, 11);
var rn2 = new RationalNumber(rn.toString());
rn2.toString();

@OUTPUT:
"4/11"

@@END:	EXAMPLE


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@BEGIN: EXAMPLE

@DESCRIPTION: Print toString versions of Infinity, -Infinity and NaN.

@CODE:
new RationalNumber(1,0).toString();
new RationalNumber(-1,0).toString();
new RationalNumber(0,0).toString();

@OUTPUT:
"1/0"
"-1/0"
"0/0"

@@END:	EXAMPLE


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@BEGIN: EXAMPLE

@DESCRIPTION: Loading from "Infinity", "-Infinity" and "NaN" strings.

@CODE:
new RationalNumber("Infinity").toString();
new RationalNumber("-Infinity").toString();
new RationalNumber("NaN").toString();

@OUTPUT:
"1/0"
"-1/0"
"0/0"

@@END:	EXAMPLE


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@END:	FunctionDocumentation


