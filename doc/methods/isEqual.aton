
@@BEGIN:	FunctionDocumentation
@OBJECT:	RationalNumber
@METHOD:	isEqual
@PARAMETERS:	none
@PROTOTYPE:	yes
@FILE:		RationalNumber-base.js
@SEEALSO:	
@SHORTDESC:	Return true if sign, numerator and denominator of two numbers are identical.
@LONGDESC:	Test whether two rational numbers are equal.  If one number
		is not reduced, but they represent the same floating-point
		value, then the numbers are not considered equivalent.  So
		comparing 4/5 and 8/10 with the isEqual method would return
		false.  If you want to detect equality in such 
		reduced/nonreduced situations, just use the regular equality
		tests for numbers, such as rn1.valueOf() == rn2.valueOf().

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@BEGIN: EXAMPLE

@DESCRIPTION: See if two rational numbers are equal.

@CODE:
var rn = new RationalNumber('4/5');
var rn2 = new RationalNumber();
rn2.setValueNoReduce('8/10');
rn.isEqual(rn2);
rn2.reduce();
rn.isEqual(rn2);

@OUTPUT:
false
true

@@END:	EXAMPLE

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@BEGIN: EXAMPLE

@DESCRIPTION:	See if two rational numbers are numerically equal if one is 
		not reduced.

@CODE:
var rn = new RationalNumber('4/5');
var rn2 = new RationalNumber();
rn2.setValueNoReduce('8/10');
rn.isEqual(rn2);
rn.valueOf() == rn2.valueOf()

@OUTPUT:
false
true

@@END:	EXAMPLE

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@END:	FunctionDocumentation


